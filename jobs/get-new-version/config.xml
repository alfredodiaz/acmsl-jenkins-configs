<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job performs the following tasks:&#xd;
&lt;ol&gt;&#xd;
  &lt;li&gt;Builds acmsl-pom;&lt;/li&gt;&#xd;
  &lt;li&gt;Uses this job&apos;s BUILD_NUMBER as the basis for a new tag, using the current values of &amp;lt;version.major&amp;gt; and &amp;lt;version.minor&amp;gt; in acmsl-pom&apos;s pom.xml;&lt;/li&gt;&#xd;
  &lt;li&gt;Updates the properties for all in-house projects, to their last stable version, according to Maven;&lt;/li&gt;&#xd;
  &lt;li&gt;Uses the new version as the value the property associated to the project passed in the &quot;trigger&quot; parameter;&lt;/li&gt;&#xd;
  &lt;li&gt;Commits and releases a new version of acmsl-pom with the new tag;&lt;/li&gt;&#xd;
  &lt;li&gt;Afterwards, the trigger job will update its own pom.xml to point to this new acmsl-pom tag (so it points to the latest released versions of in-house dependencies), and tag himself.&lt;/li&gt;&#xd;
&lt;/ol&gt;&#xd;
&#xd;
Build-Time Trend:&lt;br/&gt;&#xd;
&lt;img usemap=&quot;#map0&quot; src=&quot;buildTimeGraph/png&quot; lazymap=&quot;buildTimeGraph/map&quot; alt=&quot;[Build time graph]&quot; height=&quot;400&quot; width=&quot;500&quot;/&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.cloudbees.plugins.deployer.DeployNowJobProperty plugin="deployer-framework@1.0">
      <oneClickDeploy>false</oneClickDeploy>
      <hosts/>
    </com.cloudbees.plugins.deployer.DeployNowJobProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.11.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.nirima.jenkins.plugins.docker.DockerJobProperty plugin="docker-plugin@0.8">
      <tagOnCompletion>false</tagOnCompletion>
      <additionalTag></additionalTag>
      <pushOnSuccess>false</pushOnSuccess>
      <cleanImages>true</cleanImages>
    </com.nirima.jenkins.plugins.docker.DockerJobProperty>
    <org.jenkins.ci.plugins.html5__notifier.JobPropertyImpl plugin="html5-notifier-plugin@1.3">
      <skip>false</skip>
    </org.jenkins.ci.plugins.html5__notifier.JobPropertyImpl>
    <jenkins.advancedqueue.AdvancedQueueSorterJobProperty plugin="PrioritySorter@2.9">
      <useJobPriority>true</useJobPriority>
      <priority>1</priority>
    </jenkins.advancedqueue.AdvancedQueueSorterJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>trigger</name>
          <description>The project requesting a new version.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/rydnr/acmsl-pom.git</url>
        <credentialsId>d26f616d-b0e9-4ef1-9e78-45d274cc1aa6</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GithubWeb">
      <url>https://github.com/rydnr/acmsl-pom.git</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cd &quot;${WORKSPACE}&quot;;
# DO NOT REPLACE THIS WITH A MAVEN JOB!!!
/opt/apache-maven/bin/mvn clean deploy</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
        <worstResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </worstResult>
        <bestResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </bestResult>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
export MAJOR=$(grep -A 5 &apos;&lt;version.major&gt;&apos; pom.xml | head -n 1 | cut -d &apos;&gt;&apos; -f 2 | cut -d &apos;&lt;&apos; -f 1);
export MINOR=$(grep -A 5 &apos;&lt;version.minor&gt;&apos; pom.xml | head -n 1 | cut -d &apos;&gt;&apos; -f 2 | cut -d &apos;&lt;&apos; -f 1);
if [ ! -d target ]; then mkdir &quot;${WORKSPACE}&quot;/target; fi;
export SEQ=&quot;$(printf &quot;%04d\n&quot; ${BUILD_NUMBER})&quot;;
echo &quot;${MAJOR}.${MINOR}.${SEQ}&quot; &gt; &quot;${WORKSPACE}&quot;/target/.version;
echo &quot;** VERSION:${MAJOR}.${MINOR}.${SEQ}&quot;;
git checkout -b acmsl-pom-${MAJOR}.${MINOR}.${SEQ};</command>
        </hudson.tasks.Shell>
        <hudson.plugins.descriptionsetter.DescriptionSetterBuilder plugin="description-setter@1.9">
          <regexp>\*\* VERSION:(.*)&apos;</regexp>
          <description>${trigger}-\1</description>
        </hudson.plugins.descriptionsetter.DescriptionSetterBuilder>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
export NEW_VERSION=&quot;$(cat &quot;${WORKSPACE}&quot;/target/.version)&quot;;
sed -i &quot;s &lt;version.${trigger}&gt;\(.*\)&lt;/version.${trigger}&gt; &lt;version.${trigger}&gt;${NEW_VERSION}&lt;/version.${trigger}&gt; g&quot; pom.xml;
/opt/apache-maven/bin/mvn versions:update-properties;</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
echo &quot;TAG_NAME=$(cat &quot;${WORKSPACE}&quot;/target/.version)&quot;;
/opt/apache-maven/bin/mvn versions:set -DnewVersion=$(cat &quot;${WORKSPACE}&quot;/target/.version);</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
export ARTIFACT=&quot;acmsl-pom&quot;;
git remote set-url origin https://github.com/rydnr/${ARTIFACT}.git &amp;&amp; \
git add pom.xml &amp;&amp; git commit -m&quot;Releasing $(cat target/.version) for ${trigger}&quot;;
export NEW_GIT_TAG=&quot;${ARTIFACT}-$(cat target/.version)&quot;;
# git tag -a &quot;${ARTIFACT}-$(cat target/.version)&quot; -m&quot;Releasing $(cat target/.version)&quot; &amp;&amp; git push origin --tags;</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
export GROUP=&quot;acmsl-pom&quot;;
export ARTIFACT=&quot;acmsl-pom&quot;;
export NEW_VERSION=&quot;$(cat ${WORKSPACE}/target/.version)&quot;;
export REPO=&quot;http://github.com/rydnr/${ARTIFACT}.git&quot;;
/usr/local/bin/prepare-release.sh ${GROUP} ${ARTIFACT} ${NEW_VERSION} ${REPO};</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>cd &quot;${WORKSPACE}&quot;;
/opt/apache-maven/bin/mvn -Prelease release:perform</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.plugins.git.GitPublisher plugin="git@2.3.1">
      <configVersion>2</configVersion>
      <pushMerge>false</pushMerge>
      <pushOnlyIfSuccess>true</pushOnlyIfSuccess>
      <forcePush>false</forcePush>
      <tagsToPush>
        <hudson.plugins.git.GitPublisher_-TagToPush>
          <targetRepoName>origin</targetRepoName>
          <tagName>${NEW_GIT_TAG}</tagName>
          <tagMessage>Releasing ${NEW_GIT_TAG} triggered by ${trigger}</tagMessage>
          <createTag>true</createTag>
          <updateTag>false</updateTag>
        </hudson.plugins.git.GitPublisher_-TagToPush>
      </tagsToPush>
    </hudson.plugins.git.GitPublisher>
    <hudson.tasks.Mailer plugin="mailer@1.12">
      <recipients>jenkins@acm-sl.org</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.5.14"/>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.4"/>
  </buildWrappers>
</project>